#!/bin/bash

# Set global variables
VERSION="1.0"
BASE_DIR="$(dirname "$(readlink -f "$0")")"
SRC_DIR="$BASE_DIR/src"

export VERSION
export BASE_DIR
export SRC_DIR

# Source
. "$SRC_DIR"/common

. "$SRC_DIR"/00_filesystem
. "$SRC_DIR"/01_base
. "$SRC_DIR"/02_harden
. "$SRC_DIR"/03_xorg

# Error checking
error(){
    local error="$1"
    local msg=""
    local code=255
    case $error in
    0)
        msg="need root privileges to install"
        code=1
        ;;
    1)
        msg="missing parameter"
        code=2
        ;;
    2)
        msg="invalid parameter"
        code=1
        ;;
    3)
        msg=$2
        code=3
        ;;
    4)
        msg=$2
        code=4
        ;;
    5)
        msg="Invalid partition layout"
        code=3
    esac

    if [ $code -eq 1 ]; then
        echo_fail "Error: $msg, exiting..."
    elif [ $code -eq 2 ]; then
        echo_warn "Error: $msg, exiting..."
    elif [ $code -eq 3 ]; then
        echo_fail "Installation failed ($msg), aborting..."
    elif [ $code -eq 4 ]; then
        echo_fail "Failure: missing configuration files ($msg), aborting..."
    else
        echo_fail "Unknown failure, aborting..."
    fi
    exit $code
}

show_help(){
    echo -e "Usage: install [filesystem | base | harden | xorg ]"
    echo
    error $1
}

if ! [ $(id -u) = 0 ]; then
	show_help 0
fi

if [ $# -eq 0 ]; then
    show_help 1
fi

# Run
export error

set -e

set -u

set -o pipefail

run(){
    local flag="$1"
    case $flag in
    filesystem)
        install_filesystem
        update-grub
        echo_ln
        echo_warn "System 'default root' snapshot needs to be mounted." ; echo
        echo_inf "Instructions:"
        echo_inf "1. Reboot and select 'default root' snapshot in GRUB snapshots menu.\n2. Run 'update-grub' and reboot normally to complete the process."
        ;;
    base)
        snapper create -d "install filesystem"
        install_base
        snapper create -d "install base"
        update-grub
        echo_ln
        echo_ok "Base console installation is done." ; echo
        echo_warn "Reboot and connect to wifi via nmcli, i.e. 'nmcli device wifi connect -a' ."
        ;;
    harden)
        confirm_nmcli
        harden
        snapper create -d "harden"
        update-grub
        echo_ln
        echo_ok "Hardening done." ; echo
        echo_warn "Reboot to activate TPM2 LUKS decryption."
        ;;
    xorg)
        install_xorg
        snapper create -d "install xorg"
        update-grub
        echo_ln
        echo_ok "xorg installation is done." ; echo
        echo_inf "Reboot to enable xorg server..."
        ;;
    configure)
        configure
        snapper create -d "configure"
        update-grub
        echo_ln
        echo_ok "Configuring system done."
        echo_warn "Reboot to finish installation."
        ;;
    *)
        show_help 2
        ;;
    esac
}

run $1