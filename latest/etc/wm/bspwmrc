#! /bin/sh

# Monitors: get connected monitors
for MONITOR_STATUS in $(ls -f -1 /sys/class/drm/[card0-]*/status); do
    if [ "$(cat $MONITOR_STATUS )" = "connected" ]; then
        MONITOR_NAME_DRM="$(echo $MONITOR_STATUS | grep -oP '(?<=/sys/class/drm/card0-)[^\/]+')"
        if [ $(echo $MONITOR_NAME_DRM | grep -c "eDP") -gt 0 ]; then
            MONITOR_MAIN_DRM=$NAME
        elif [ $(echo $MONITOR_NAME_DRM | grep -c "HDMI") -gt 0 ]; then
            MONITOR_HDMI_DRM=$NAME
        fi
    fi
done

# Monitors: get Xorg monitor names
for MONITOR_NAME_XORG in $(xrandr --verbose | grep '[^dis]connected' | awk '{print $1}'); do
    if [ $(echo $MONITOR_NAME_XORG | grep -c "eDP") -gt 0 ]; then
        MONITOR_MAIN_XORG=$MONITOR_NAME_XORG
elif [ $(echo $MONITOR_NAME_XORG | grep -c "HDMI") -gt 0 ]; then
        MONITOR_HDMI_XORG=$MONITOR_NAME_XORG
    fi
done

# Monitors: set main monitor settings
xrandr --output $MONITOR_MAIN_XORG --primary --mode 1920x1080 --rotate normal

# Monitors: override settings if HDMI connected
if ! [ -z $MONITOR_HDMI_XORG ]; then
    xrandr --output $MONITOR_MAIN_XORG --primary --mode 1920x1080 --rotate normal --output $MONITOR_HDMI_XORG --mode 1920x1080 --rotate normal --above $MONITOR_MAIN_XORG
fi

# sxhkd
if ! pgrep -x sxhkd > /dev/null; then
    sxhkd &
fi

# bspwm Settings
bspc monitor $MONITOR_MAIN_XORG -d 0 1 2 3 4 5 6
if ! [ -z $MONITOR_HDMI_XORG ]; then
    bspc monitor $MONITOR_HDMI_XORG -d 7 8 9 10 11 12 13
fi

bspc config border_width				0
bspc config window_gap					4
bspc config top_padding					29
bspc config right_padding				0
bspc config bottom_padding				0
bspc config left_padding				0
bspc config split_ratio					0.53
bspc config top_monocle_padding			-29
bspc config left_monocle_padding		0
bspc config bottom_monocle_padding		0
bspc config right_monocle_padding		0
bspc config borderless_monocle			true
bspc config single_monocle				false
bspc config gapless_monocle				true
bspc config focus_follows_pointer		true
bspc config remove_disabled_monitors	true
bspc config merge_overlapping_monitors	true
bspc config pointer_action1				move
bspc config pointer_action2				resize_corner
bspc config pointer_action3				resize_side

####### Colors #######
# at-deb-dark
# -----------
# background =  #222223
# foreground =  #f9f9f9
# alert	=       #ff0044
# warning =     $yellow
# selection =   #3f3f41
# blue_darker = #0006ff
# cyan_faded =  #008888
# gray	=       #555555
# red 	=       #ff3e7a
# green =       #55ff55
# yellow =      #ffff55
# blue =        #0048ff
# lilac =       #ff55e9
# cyan =        #55ffff
# white	=       #f8f8f8
######################

bspc config normal_border_color		"#2f2f30"
bspc config active_border_color		"#2f2f30"
bspc config focused_border_color	"#55ffff"
bspc config presel_feedback_color	"#2f2f30"

bspc rule -a Dialog state=floating center=on
bspc rule -a Code desktop='^3' follow=off
bspc rule -a discord monitor=$MONITOR_MAIN_XORG desktop='^7' follow=on

# Policykit
if ! pgrep -f /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 > /dev/null; then
    /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &
fi

# Touchpad settings
bash /usr/local/libexec/touchpad_init &

# Custom braceleft, braceright
xmodmap /home/$USER/.Xmodmap

# Battery polling
if ! pgrep -x battery_poll > /dev/null; then
    bash /usr/local/libexec/battery_poll &
fi

# Lockscreen
if ! pgrep -x xss-lock > /dev/null; then
    xss-lock -- /usr/local/bin/lockscreen &
fi

# Compositor
if ! pgrep -x picom > /dev/null; then
    picom --daemon &
fi

# Restart daemons
# ---------------
# Needed for /usr/local/bin/themes functionality

# Notification daemon
if ! pgrep -x dunst > /dev/null; then
    dunst &
elif pgrep -x dunst > /dev/null; then
    kill -15 "$(pidof dunst)" && dunst &
fi

# xsettings daemon
if ! pgrep -x xsettingsd > /dev/null; then
    xsettingsd &
elif pgrep -x xsettingsd > /dev/null; then
    kill -15 "$(pidof xsettingsd)" && xsettingsd &
fi

while read line; do
	prev=$(echo $line)
done < /var/local/wallpapers/current-wallpaper

# wallpapers
while read wallpaper; do
    CURRENT_WALLPAPER=$(echo $wallpaper)
done < /var/local/wallpapers/current-wallpaper

feh --bg-fill /usr/local/share/themes/at-deb-theme/wallpapers/$CURRENT_WALLPAPER/desktop/1920x1080.png &

# Polybar: set environment variables
export POLYBAR_MONITOR_MAIN=$MONITOR_MAIN_XORG
export POLYBAR_MONITOR_HDMI=$MONITOR_HDMI_XORG
export POLYBAR_WLP="$(cat /proc/net/wireless | grep -oP 'wlp[^:]+')"

# Polybar: init
killall -q polybar
polybar --config=$HOME/.config/polybar/polybar.ini main & #2>&1 | tee -a /tmp/polybar.log & disown

if ! [ -z $MONITOR_HDMI_XORG ]; then
    polybar --config=$HOME/.config/polybar/polybar.ini hdmi &
fi

# Conky
if pgrep -x conky > /dev/null; then
    kill -15 "$(pidof conky)"
fi
conky -x 16 -y 24 & disown
if ! [ -z $MONITOR_HDMI_XORG ]; then
    conky -x 16 -y 1104 & disown
fi

# xfce4-clipman
if ! pgrep -x xfce4-clipman > /dev/null; then
    xfce4-clipman &
fi
